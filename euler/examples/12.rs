/* The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The
 * first ten terms would be:
 *
 *   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *    1: 1
 *    3: 1,3
 *    6: 1,2,3,6
 *   10: 1,2,5,10
 *   15: 1,3,5,15
 *   21: 1,3,7,21
 *   28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 */

use ps::math::prime::factor;
fn solve(n: u64) -> u64 {
    let i = factor(2..)
        .map(|fct| fct.iter().map(|(&k, v)| v + if k != 2 { 1 } else { 0 }).product())
        .scan(1, |acc, curr| {
            let ans = *acc * curr;
            *acc = curr;
            Some(ans)
        })
        .enumerate()
        .skip_while(|(_, x)| *x <= n)
        .next()
        .unwrap()
        .0 as u64;
    (i + 1) * (i + 2) / 2
}

#[cfg(test)]
mod tests {
    use super::solve;
    #[test]
    fn hint_p0012() {
        assert_eq!(solve(5), 28);
    }
}

fn main() {
    euler::bench(|| solve(500));
}
